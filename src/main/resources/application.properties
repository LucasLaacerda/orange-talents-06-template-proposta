# MySQL
spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver
spring.datasource.url=${PROPOSTA_DB:jdbc:mysql://localhost:3306/proposta}
spring.datasource.username=root
spring.datasource.password=desafios
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.show_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect



# spring security resource server configuration
spring.security.oauth2.resourceserver.jwt.issuer-uri=${KEYCLOAK_ISSUER_URI:http://localhost:18080/auth/realms/nosso-cartao}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${KEYCLOAK_JWKS_URI:http://localhost:18080/auth/realms/nosso-cartao/protocol/openid-connect/certs}

#services external - host
api-analise.host=http://localhost:9999/api/solicitacao
api-contas.host=http://localhost:8888/api/cartoes

#log
logging.level.org.springframework.security=DEBUG

#management
management.endpoints.web.exposure.include=info,health, prometheus
management.endpoints.prometheus.enabled=true
management.endpoint.health.show-details=always

#erro
server.error.include-stacktrace=never

#status health
management.endpoint.health.status.http-mapping.down=500

opentracing.spring.cloud.jdbc.enabled=false
# Jaeger - Habilita ou não
opentracing.jaeger.enabled=${JAEGER_ENABLED:true}

# Jaeger - Nome do serviço
opentracing.jaeger.service-name=desafio-proposta-Lucas

# Jaeger - Endereço para enviar os metadados (trace, span, etc)
opentracing.jaeger.http-sender.url=${JAEGER_ENDPOINT:http://localhost:14268/api/traces}

# Jaeger - Tipo de amostragem (probabilístico) e sua configuração (1 = 100%)
opentracing.jaeger.probabilistic-sampler.sampling-rate=${JAEGER_SAMPLER:1}
